jobs:
  build:
    docker:
      - image: 'circleci/ruby:2.7.2-node'
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
  test:
    docker:
      - image: 'circleci/ruby:2.7.2-node'
      - image: 'circleci/mysql:latest'
        command: [--default-authentication-plugin=mysql_native_password]
        environment:
          MYSQL_ROOT_PASSWORD: my-secret-pw
          MYSQL_DATABASE: seller_test

    environment:
      BUNDLE_JOBS: '3'
      BUNDLE_RETRY: '3'
      RAILS_ENV: test
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
      - run:
          command: 'dockerize -wait tcp://localhost:3306 -timeout 1m'
          name: Wait for DB
      - run:
          command: 'bundle exec rails db:schema:load --trace'
          name: Database setup
      - ruby/rspec-test
orbs:
  node: circleci/node@4.1.0
  ruby: circleci/ruby@1.1.2
  aws-ecr: circleci/aws-ecr@6.15.3
  aws-ecs: circleci/aws-ecs@2.0.0
version: 2.1
workflows:
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
  build-and-deploy:
    jobs:
      - aws-ecr/build-and-push-image:
          repo: '${MY_APP_PREFIX}'
          tag: '${CIRCLE_SHA1}'
          extra-build-args: '--build-arg SECRET_KEY_BASE=${SECRET_KEY_BASE}'
          filters:
            branches:
              only:
                - master
      - aws-ecs/deploy-service-update:
          cluster-name: '${MY_APP_PREFIX}-cluster'
          container-image-name-updates: 'container=web,tag=${CIRCLE_SHA1}'
          family: '${MY_APP_PREFIX}'
          requires:
            - aws-ecr/build-and-push-image
